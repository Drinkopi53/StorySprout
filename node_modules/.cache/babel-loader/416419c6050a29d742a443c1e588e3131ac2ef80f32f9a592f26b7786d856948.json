{"ast":null,"code":"import API_CONFIG from './apiConfig';\nclass ImageService {\n  // Generate an image based on a story description\n  static async generateImage(storyDescription, childAge) {\n    try {\n      // In a real implementation, we would call an image generation API\n      // For now, we'll return a mock image URL\n      console.log('Generating image for story description');\n\n      // Mock image URL\n      const mockImageUrl = '/mock-images/story-illustration.png';\n\n      // Simulate API delay\n      await new Promise(resolve => setTimeout(resolve, 1500));\n      return mockImageUrl;\n    } catch (error) {\n      console.error('Error generating image:', error);\n      throw error;\n    }\n  }\n\n  // Get a placeholder image based on story theme\n  static getPlaceholderImage(theme) {\n    const placeholders = {\n      adventure: '/mock-images/adventure.png',\n      fantasy: '/mock-images/fantasy.png',\n      animals: '/mock-images/animals.png',\n      'fairy-tale': '/mock-images/fairy-tale.png',\n      science: '/mock-images/science.png',\n      default: '/mock-images/default.png'\n    };\n    return placeholders[theme] || placeholders.default;\n  }\n}\nexport default ImageService;","map":{"version":3,"names":["API_CONFIG","ImageService","generateImage","storyDescription","childAge","console","log","mockImageUrl","Promise","resolve","setTimeout","error","getPlaceholderImage","theme","placeholders","adventure","fantasy","animals","science","default"],"sources":["D:/Games/ProjectGitHub/StorySprout/src/services/ImageService.js"],"sourcesContent":["import API_CONFIG from './apiConfig';\n\nclass ImageService {\n  // Generate an image based on a story description\n  static async generateImage(storyDescription, childAge) {\n    try {\n      // In a real implementation, we would call an image generation API\n      // For now, we'll return a mock image URL\n      console.log('Generating image for story description');\n      \n      // Mock image URL\n      const mockImageUrl = '/mock-images/story-illustration.png';\n      \n      // Simulate API delay\n      await new Promise(resolve => setTimeout(resolve, 1500));\n      \n      return mockImageUrl;\n    } catch (error) {\n      console.error('Error generating image:', error);\n      throw error;\n    }\n  }\n  \n  // Get a placeholder image based on story theme\n  static getPlaceholderImage(theme) {\n    const placeholders = {\n      adventure: '/mock-images/adventure.png',\n      fantasy: '/mock-images/fantasy.png',\n      animals: '/mock-images/animals.png',\n      'fairy-tale': '/mock-images/fairy-tale.png',\n      science: '/mock-images/science.png',\n      default: '/mock-images/default.png'\n    };\n    \n    return placeholders[theme] || placeholders.default;\n  }\n}\n\nexport default ImageService;"],"mappings":"AAAA,OAAOA,UAAU,MAAM,aAAa;AAEpC,MAAMC,YAAY,CAAC;EACjB;EACA,aAAaC,aAAaA,CAACC,gBAAgB,EAAEC,QAAQ,EAAE;IACrD,IAAI;MACF;MACA;MACAC,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;;MAErD;MACA,MAAMC,YAAY,GAAG,qCAAqC;;MAE1D;MACA,MAAM,IAAIC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;MAEvD,OAAOF,YAAY;IACrB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdN,OAAO,CAACM,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,MAAMA,KAAK;IACb;EACF;;EAEA;EACA,OAAOC,mBAAmBA,CAACC,KAAK,EAAE;IAChC,MAAMC,YAAY,GAAG;MACnBC,SAAS,EAAE,4BAA4B;MACvCC,OAAO,EAAE,0BAA0B;MACnCC,OAAO,EAAE,0BAA0B;MACnC,YAAY,EAAE,6BAA6B;MAC3CC,OAAO,EAAE,0BAA0B;MACnCC,OAAO,EAAE;IACX,CAAC;IAED,OAAOL,YAAY,CAACD,KAAK,CAAC,IAAIC,YAAY,CAACK,OAAO;EACpD;AACF;AAEA,eAAelB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}